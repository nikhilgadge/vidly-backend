name: CD
on:
  push:
    branches:
      - main

jobs:
  deploy: 
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push to Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: nikhilgadge/vidly-backend:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Pull docker-compose.prod.yml from EC2
        uses: appleboy/scp-action@v0.1.0
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: ./deploy/docker-compose.prod.yml
            target: ./docker-compose.prod.yml
    
      - name: Update image tag in docker-compose.prod.yml
        run: |
            sed -i 's|image: nikhilgadge/vidly-backend:.*|image: '"nikhilgadge/vidly-backend:${{ github.run_id }}"'|' docker-compose.prod.yml
            cat docker-compose.prod.yml  # Optional: print the file to check the changes
    
      # - name: Save updated docker-compose.yml back to EC2
      #   uses: appleboy/scp-action@v0.1.0
      #   with:
      #       host: ${{ secrets.SSH_HOST }}
      #       username: ${{ secrets.SSH_USERNAME }}
      #       key: ${{ secrets.SSH_PRIVATE_KEY }}
      #       source: ./docker-compose.yml
      #       target: /path/to/remote/docker-compose.yml
    
      # - name: SSH to Docker Swarm Manager and deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #       host: ${{ secrets.SSH_HOST }}
      #       username: ${{ secrets.SSH_USERNAME }}
      #       key: ${{ secrets.SSH_PRIVATE_KEY }}
      #       script: |
      #         echo "$DOCKER_USERNAME $DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
      #         docker stack deploy -c /path/to/remote/docker-compose.yml my_stack


  

  
          
